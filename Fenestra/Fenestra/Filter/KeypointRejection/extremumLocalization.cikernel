float roundNum(float x){
if (mod(x,1.0) < 0.5) return floor(x);
return ceil(x);
}
// --------------------------------------------------------
kernel vec4 extremumLocalization(sampler map, sampler src, sampler hiImg, sampler loImg, float sigma)
{
float radius = roundNum(3.0 * sigma);
vec2 dc = destCoord();

vec4 indicator = sample(map, samplerTransform(map, dc));
if (indicator.a == 0.5) return vec4(0.0);
if (indicator.a == 1.0) return indicator;


vec4 extent = samplerExtent(map);

// traverse window to see if dc is a keypoint
for (float i = -radius; i <= radius; i+=1.0){
for (float j = -radius; j <= radius; j+=1.0){
vec2 nc = vec2(dc.x + i, dc.y + j);
// double check these boundary conditions
if (nc.x < extent[0] || nc.x >= (extent[0]+extent[2])) nc = vec2(dc.x - i, nc.y);
if (nc.y < extent[1] || nc.y >= (extent[1]+extent[3])) nc = vec2(nc.x, dc.y -j);

vec4 checker = sample(map, samplerTransform(map, nc));
if (checker.a == 0.5){
if (checker[0] == dc.x && checker[1] == dc.y) return vec4(0.0, 0.0, indicator[2], 1.0); 
}
}
}

return vec4(0.0);
}

