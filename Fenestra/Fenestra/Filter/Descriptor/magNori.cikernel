kernel vec4 magNori(sampler src)
{
    float M_PI         = 3.14159265358979323846264338327950288;
    float MAX_MULTIPLE = 50.0;
    float PALETTE      = 255.0;
    vec2 dc            = destCoord();

    vec4 extent = samplerExtent(src);
    float xl               = dc.x - 1.0;
    if (xl < extent[0]) xl = dc.x + 1.0;
    float xh               = dc.x + 1.0;
    if (xh > (extent[0]+extent[2])) xh = dc.x - 1.0;
    float yl               = dc.y - 1.0;
    if (yl < extent[1]) yl = dc.y + 1.0;
    float yh               = dc.y + 1.0;
    if (yh > (extent[1]+extent[3])) yh = dc.y - 1.0;

    float pxl = sample(src, samplerTransform(src, vec2(xl,dc.y))).a;
    float pxh = sample(src, samplerTransform(src, vec2(xh,dc.y))).a;
    float pyl = sample(src, samplerTransform(src, vec2(dc.x,yl))).a;
    float pyh = sample(src, samplerTransform(src, vec2(dc.x,yh))).a;

    // calulate magnitude and orientation
    float m        = sqrt((pxh - pxl)*(pxh - pxl) + (pyh - pyl)*(pyh - pyl));
    float o        = atan((pyh-pyl), (pxh-pxl));
    if (o < 0.0) o = o + 2.0*M_PI;
    o              = o / (2.0 * M_PI);

    return vec4(m, o, 0.0, 1.0);
}
